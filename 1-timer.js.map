{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\nlet selectedDate;\n\nstartBtn.disabled = true;\n\nflatpickr(dateTimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const now = new Date();\n    if (selectedDates[0] <= now) {\n      iziToast.error({ title: 'Error', message: 'Please choose a future date' });\n    } else {\n      selectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  }\n});\n\nstartBtn.addEventListener('click', () => {\n  clearInterval(countdownInterval);\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const diff = selectedDate - now;\n    if (diff <= 0) {\n      clearInterval(countdownInterval);\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    daysEl.textContent = pad(days);\n    hoursEl.textContent = pad(hours);\n    minutesEl.textContent = pad(minutes);\n    secondsEl.textContent = pad(seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const sec = 1000;\n  const min = sec * 60;\n  const hr = min * 60;\n  const day = hr * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hr);\n  const minutes = Math.floor((ms % hr) / min);\n  const seconds = Math.floor((ms % min) / sec);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","dateTimePicker","daysEl","hoursEl","minutesEl","secondsEl","countdownInterval","selectedDate","flatpickr","selectedDates","now","iziToast","diff","days","hours","minutes","seconds","convertMs","pad","ms","value"],"mappings":"sGAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACAC,EAEJP,EAAS,SAAW,GAEpBQ,EAAUP,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrB,MAAMC,EAAM,IAAI,KACZD,EAAc,CAAC,GAAKC,EACtBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,8BAA+B,GAEzEJ,EAAeE,EAAc,CAAC,EAC9BT,EAAS,SAAW,GAE1B,CACA,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvC,cAAcM,CAAiB,EAC/BA,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAOL,EADD,IAAI,KAEhB,GAAIK,GAAQ,EAAG,CACb,cAAcN,CAAiB,EAC/B,MACN,CACI,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAI,EACxDV,EAAO,YAAcgB,EAAIL,CAAI,EAC7BV,EAAQ,YAAce,EAAIJ,CAAK,EAC/BV,EAAU,YAAcc,EAAIH,CAAO,EACnCV,EAAU,YAAca,EAAIF,CAAO,CACpC,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAE,EAClCJ,EAAU,KAAK,MAAOI,EAAK,KAAM,GAAG,EACpCH,EAAU,KAAK,MAAOG,EAAK,IAAO,GAAG,EAE3C,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASE,EAAIE,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}